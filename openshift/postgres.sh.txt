echo postgres123 > password1.txt

tr -d '\n' < password1.txt >  password.txt

oc create secret generic postgres-pass --from-file=password.txt

cat > pvc.yaml <<EOF

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mos-postgres-pvc
  namespace: elmoselmos-dev
  labels:
    name: postgresmos
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: pvc-postgres-name
  storageClassName: gp2
  volumeMode: Filesystem

EOF

oc create -f pvc.yaml




cat > postgres-app.yaml <<EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresmos
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: postgresmos
  template:
    metadata:
      labels:
        app: postgresmos
    spec:
      schedulerName: stork
      containers:
      - name: postgresmos
        image: postgres:9.5
        imagePullPolicy: "Always"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: adminpg
        - name: PGUSER
          value: pgbench
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-pass
              key: password.txt
        - name: PGBENCH_PASSWORD
          value: superpostgres
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgredb
      volumes:
      - name: postgredb
        persistentVolumeClaim:
          claimName: mos-postgres-pvc
EOF

oc create -f postgres-app.yaml

oc get pods -l app=postgresmos -o wide --watch

VOL=`oc get pvc | grep mos-postgres-pvc | awk '{print $3}'`

#PX_POD=$(oc get pods -l name=portworx -n kube-system -o jsonpath='{.items[0].metadata.name}')
#$ oc exec -it $PX_POD -n kube-system -- /opt/pwx/bin/pxctl volume inspect ${VOL}
